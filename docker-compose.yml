version: '3'

services:
    nginx:
        restart: always
        image: nginx:1.23-alpine
        ports:
            - 80:80
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - static_volume:/app/test-management-system/staticfiles/
    server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/server/Dockerfile
        entrypoint: /app/docker/server/django-entrypoint.sh
        volumes:
            - static_volume:/app/test-management-system/staticfiles/
            - features_volume:/app/test-management-system/feature_files/
        expose:
            - 8000
        env_file:
            - .env
    worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/server/Dockerfile
        entrypoint: /app/docker/server/celery-entrypoint.sh
        volumes:
            - static_volume:/app/test-management-system/staticfiles/
            - features_volume:/app/test-management-system/feature_files/
        env_file:
            - .env
        depends_on:
            - server
            - redis
    redis:
        restart: unless-stopped
        image: redis:7.0.5-alpine
        expose:
            - 6379
    db:
        image: postgres:13.0-alpine
        restart: unless-stopped
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        expose:
            - 5432
    react:
        build:
            context: .
            dockerfile: ./docker/react/Dockerfile
        entrypoint: /app/docker/react/react-entrypoint.sh
        volumes:
            - static_volume:/staticfiles/
        depends_on:
            - server

volumes:
    static_volume: {}
    features_volume: {}
    postgres_data: {}
